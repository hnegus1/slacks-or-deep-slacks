{"version":3,"sources":["components/MyFakeTweet.js","App.js","index.js","img/question.png"],"names":["MyFakeTweet","props","config","user","nickname","name","avatar","QuestionMarkImage","verified","locked","display","text","tweetText","image","date","Date","toDateString","app","retweets","likes","Card","Body","style","width","App","useState","score","setScore","questionsAnswered","setQuestionsAnswered","alreadyAskedQuestions","setAlreadyAskedQuestions","SelectTweet","currentTweet","setCurrentTweet","answerText","setAnswerText","Container","className","Row","Col","Button","onClick","AnswerQuestion","id","marginRight","fontWeight","href","title","length","alert","Math","round","random","tweet","FakeTweets","floor","map","question","includes","answer","SlacksTweets","ev","push","target","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.57754cfd.chunk.js","sourcesContent":["import React from 'react';\r\nimport QuestionMarkImage from '../img/question.png';\r\n\r\nimport {Card} from 'react-bootstrap';\r\n\r\nimport FakeTweet from 'fake-tweet';\r\nimport 'fake-tweet/build/index.css';\r\n\r\n\r\nfunction MyFakeTweet(props){\r\n    const config = {\r\n        user: {\r\n          nickname: `${props.name}`,\r\n          name: `${props.name}`,\r\n          avatar: QuestionMarkImage,\r\n          verified: false,\r\n          locked: false\r\n        },\r\n        display: \"default\",\r\n        text: `${props.tweetText}`,\r\n        image: \"\",\r\n        date: `${new Date().toDateString()}`,\r\n        app: \"Twitter for iPhone\",\r\n        retweets: 322,\r\n        likes: 10000\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n            <FakeTweet style={{width: \"100%\"}} config={config}/>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default MyFakeTweet;","import React, {useState, useEffect} from 'react';\nimport MyFakeTweet from './components/MyFakeTweet.js';\nimport {Container, Row, Col, Button, Card} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport SlacksTweets from './data/slacks.json';\nimport FakeTweets from './data/fake.json';\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [questionsAnswered, setQuestionsAnswered] = useState(0);\n\n\n  const [alreadyAskedQuestions, setAlreadyAskedQuestions] = useState([]);\n\n  const [currentTweet, setCurrentTweet] = useState(SelectTweet());\n\n\n  const [answerText, setAnswerText] = useState(\"\");\n\n  return (\n    <Container>\n      <div className=\"App\">\n        <br/>\n        <Row>\n          <Col>\n              <MyFakeTweet tweetText={currentTweet.text} name=\"SlacksOrFake\" style={{width: \"100%\"}}/>\n          </Col>\n          <Col>\n              <Card>\n                <Card.Body>   \n                  <h3>@SirActionSlacks or @DeepSlacks?</h3>\n                  <p>For millennia, humanity has always pondered how they will meet their end. Nuclear warfare. Global warming. Cloud9 winning a game of Dota 2. All good candidates. But there is one possibility that stands above all others: The Robot Uprising.</p>\n                  <p>Can you tell which tweets are written by Dota's own SirActionSlacks and which are simply an imitation?</p>\n                  <Button onClick={AnswerQuestion} id=\"slacks\" style={{marginRight: \"10px\"}}>Slacks üë®‚Äç</Button>\n                  <Button onClick={AnswerQuestion} id=\"fake\" style={{marginRight: \"10px\"}}>Deep Slacks ü§ñ</Button>\n                  <span style={{fontWeight: \"bold\"}}>{score}/{questionsAnswered}</span>\n                  <p>{answerText}</p>\n                </Card.Body>\n              </Card>\n          </Col>        \n        </Row>\n        \n        <br/>\n        <div>Question mark icon made by <a href=\"https://www.flaticon.com/authors/those-icons\" title=\"Those Icons\">Those Icons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n        <div>Created by <a href=\"https://twitter.com/HarryNegus\">@harrynegus</a> | <a href=\"https://www.reddit.com/user/d2-match-bot-speaks\">/u/d2-match-bot-speaks</a> with <a href=\"https://reactjs.org/\">React</a>. Tweets grabbed using <a href=\"https://www.tweepy.org/\">Tweepy</a></div>\n        </div>\n        <div>Credit to <a href=\"https://twitter.com/tsunami643\">@tsunami643</a> for creating <a href=\"https://twitter.com/DeepSlacks\">@DeepSlacks</a> and <a href=\"https://twitter.com/SirActionSlacks\">@SirActionSlacks</a> for existing.</div>\n    </Container>\n  );\n\n  function SelectTweet(){\n    if (alreadyAskedQuestions.length >= 44) {\n      alert(`You've answered all the questions! You got ${score}/${questionsAnswered}!`)\n      setAlreadyAskedQuestions([]);\n      setScore(0);\n      setQuestionsAnswered(0);\n    }\n\n    var fakeOrSlacks = Math.round(Math.random())\n    if (fakeOrSlacks === 0) { //fake\n      var tweet = FakeTweets[Math.floor(Math.random() * FakeTweets.length)]\n      while (alreadyAskedQuestions.map((question) => question.tweet).includes(tweet)) {\n        tweet = FakeTweets[Math.floor(Math.random() * FakeTweets.length)]\n      }\n      return {text: tweet, answer: \"fake\"};\n    }else{//slacks\n      var tweet = SlacksTweets[Math.floor(Math.random() * SlacksTweets.length)]\n      while (alreadyAskedQuestions.map((question) => question.tweet).includes(tweet)) {\n        tweet = SlacksTweets[Math.floor(Math.random() * SlacksTweets.length)]\n      }\n      return {text: tweet, answer: \"slacks\"};\n    }\n  }\n\n  function AnswerQuestion(ev){\n    setQuestionsAnswered (questionsAnswered + 1)\n    alreadyAskedQuestions.push(currentTweet);\n    if (ev.target.id === currentTweet.answer) {\n      setScore(score + 1);\n      setAnswerText(\"Correct!\");\n      setCurrentTweet(SelectTweet());\n    }else{\n      setAnswerText(\"Wrong!\");\n      setCurrentTweet(SelectTweet());\n    }\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/question.6a7176fb.png\";"],"sourceRoot":""}